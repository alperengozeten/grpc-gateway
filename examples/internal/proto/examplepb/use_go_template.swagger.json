{
  "swagger": "2.0",
  "info": {
    "title": "examples/internal/proto/examplepb/use_go_template.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "LoginService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/example/login": {
      "post": {
        "summary": "Login\r\n\r\nLogin is a call with the method(s) POST within the \"LoginService\" service.\r\nIt takes in \"LoginRequest\" and returns a \"LoginReply\".\r\n\r\n## LoginRequest\r\n| Field ID    | Name      | Type                                                       | Description                  |\r\n| ----------- | --------- | ---------------------------------------------------------  | ---------------------------- | \r\n| 1 | username | TYPE_STRING | The entered username | \r\n| 2 | password | TYPE_STRING | The entered password |   \r\n\r\n## LoginReply\r\n| Field ID    | Name      | Type                                                       | Description                  |\r\n| ----------- | --------- | ---------------------------------------------------------- | ---------------------------- | \r\n| 1 | message | TYPE_STRING |  | \r\n| 2 | access | TYPE_BOOL | Whether you have access or not |",
        "operationId": "LoginService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/examplepbLoginReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/examplepbLoginRequest"
            }
          }
        ],
        "tags": [
          "LoginService"
        ]
      }
    },
    "/v1/example/logout": {
      "post": {
        "summary": "Logout\r\n\r\nLogout is a call with the method(s) POST within the \"LoginService\" service.\r\nIt takes in \"LogoutRequest\" and returns a \"LogoutReply\".\r\n\r\n## LogoutRequest\r\n| Field ID    | Name      | Type                                                       | Description                  |\r\n| ----------- | --------- | ---------------------------------------------------------  | ---------------------------- | \r\n| 1 | timeoflogout | TYPE_STRING | The time the logout was registered | \r\n| 2 | test | TYPE_INT32 | This is the title\r\u003cbr\u003e\r\u003cbr\u003eThis is the \"Description\" of field test\r\u003cbr\u003eyou can use as many newlines as you want\r\u003cbr\u003e\r\u003cbr\u003e\r\u003cbr\u003eit will still format the same in the table | \r\n| 3 | stringarray | []TYPE_STRING | This is an array\r\u003cbr\u003e\r\u003cbr\u003eIt displays that using [] infront of the type |   \r\n\r\n## LogoutReply\r\n| Field ID    | Name      | Type                                                       | Description                  |\r\n| ----------- | --------- | ---------------------------------------------------------- | ---------------------------- | \r\n| 1 | message | TYPE_STRING | Message that tells you whether your\r\u003cbr\u003elogout was succesful or not |",
        "operationId": "LoginService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/examplepbLogoutReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/examplepbLogoutRequest"
            }
          }
        ],
        "tags": [
          "LoginService"
        ]
      }
    }
  },
  "definitions": {
    "examplepbLoginReply": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "access": {
          "type": "boolean",
          "title": "Whether you have access or not"
        }
      }
    },
    "examplepbLoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "The entered username"
        },
        "password": {
          "type": "string",
          "title": "The entered password"
        }
      }
    },
    "examplepbLogoutReply": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "Message that tells you whether your\r\nlogout was succesful or not"
        }
      }
    },
    "examplepbLogoutRequest": {
      "type": "object",
      "properties": {
        "timeoflogout": {
          "type": "string",
          "title": "The time the logout was registered"
        },
        "test": {
          "type": "integer",
          "format": "int32",
          "title": "This is the title\r\n\r\nThis is the \"Description\" of field test\r\nyou can use as many newlines as you want\r\n\r\n\r\nit will still format the same in the table"
        },
        "stringarray": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "This is an array\r\n\r\nIt displays that using [] infront of the type"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
